"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_thirdweb-dev_sdk_dist_token-drop-63bb996a_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/token-drop-63bb996a.browser.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/token-drop-63bb996a.browser.esm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TokenDrop: () => (/* binding */ TokenDrop)
/* harmony export */ });
/* harmony import */ var _QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryParams-ca1fafc2.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/QueryParams-ca1fafc2.browser.esm.js");
/* harmony import */ var _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-publisher-49845f13.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-49845f13.browser.esm.js");
/* harmony import */ var _erc_20_standard_e26703e0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./erc-20-standard-e26703e0.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-e26703e0.browser.esm.js");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/constants/lib.esm/addresses.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/esm/tiny-invariant.js");
/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ "./node_modules/merkletreejs/dist/index.js");
/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js");
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ "./node_modules/bs58/index.js");
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.mjs");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cross-fetch */ "./node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_6__);












































































/**
 * Create a Drop contract for a standard crypto token or cryptocurrency.
 *
 * @example
 *
 * ```javascript
 * import { ThirdwebSDK } from "@thirdweb-dev/sdk";
 *
 * const sdk = new ThirdwebSDK("{{chainName}}");
 * const contract = await sdk.getContract("{{contract_address}}", "token-drop");
 * ```
 *
 */
class TokenDrop extends _erc_20_standard_e26703e0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.S {
  /**
   * Configure claim conditions
   * @remarks Define who can claim Tokens, when and how many.
   * @example
   * ```javascript
   * const presaleStartTime = new Date();
   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);
   * const claimConditions = [
   *   {
   *     startTime: presaleStartTime, // start the presale now
   *     maxQuantity: 3117.42, // limit how many tokens are released in this presale
   *     price: 0.001, // presale price per token
   *     snapshot: ['0x...', '0x...'], // limit claiming to only certain addresses
   *   },
   *   {
   *     startTime: publicSaleStartTime, // 24h after presale, start public sale
   *     price: 0.008, // public sale price per token
   *   }
   * ]);
   * await contract.claimConditions.set(claimConditions);
   * ```
   */

  /**
   * @internal
   */

  constructor(network, address, storage) {
    var _this;
    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    let abi = arguments.length > 4 ? arguments[4] : undefined;
    let chainId = arguments.length > 5 ? arguments[5] : undefined;
    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.da(network, address, abi, options);
    super(contractWrapper, storage, chainId);
    _this = this;
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "abi", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "metadata", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "app", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "roles", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "encoder", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "estimator", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "sales", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "platformFees", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "events", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "claimConditions", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "interceptor", void 0);
    /** ******************************
     * WRITE FUNCTIONS
     *******************************/
    /**
     * Claim a certain amount of tokens
     * @remarks See {@link TokenDrop.claimTo}
     * @param amount - the amount of tokens to mint
     * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "claim", /* @__PURE__ */(0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d3)(async function (amount) {
      let checkERC20Allowance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return _this.claimTo.prepare(await _this.contractWrapper.getSignerAddress(), amount, checkERC20Allowance);
    }));
    /**
     * Claim a certain amount of tokens to a specific Wallet
     *
     * @remarks Let the specified wallet claim Tokens.
     *
     * @example
     * ```javascript
     * const address = "{{wallet_address}}"; // address of the wallet you want to claim the NFTs
     * const quantity = 42.69; // how many tokens you want to claim
     *
     * const tx = await contract.claimTo(address, quantity);
     * const receipt = tx.receipt; // the transaction receipt
     * ```
     *
     * @param destinationAddress - Address you want to send the token to
     * @param amount - Quantity of the tokens you want to claim
     * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer
     *
     * @returns - The transaction receipt
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "claimTo", /* @__PURE__ */(0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d3)(async function (destinationAddress, amount) {
      let checkERC20Allowance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return _this.erc20.claimTo.prepare(destinationAddress, amount, {
        checkERC20Allowance
      });
    }));
    /**
     * Lets you delegate your voting power to the delegateeAddress
     *
     * @param delegateeAddress - delegatee wallet address
     * @alpha
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "delegateTo", /* @__PURE__ */(0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d3)(async delegateeAddress => {
      return _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({
        contractWrapper: this.contractWrapper,
        method: "delegate",
        args: [await (0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cp)(delegateeAddress)]
      });
    }));
    /**
     * Burn Tokens
     *
     * @remarks Burn tokens held by the connected wallet
     *
     * @example
     * ```javascript
     * // The amount of this token you want to burn
     * const amount = 1.2;
     *
     * await contract.burnTokens(amount);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "burnTokens", /* @__PURE__ */(0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d3)(async amount => {
      return this.erc20.burn.prepare(amount);
    }));
    /**
     * Burn Tokens
     *
     * @remarks Burn tokens held by the specified wallet
     *
     * @example
     * ```javascript
     * // Address of the wallet sending the tokens
     * const holderAddress = "{{wallet_address}}";
     *
     * // The amount of this token you want to burn
     * const amount = 1.2;
     *
     * await contract.burnFrom(holderAddress, amount);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "burnFrom", /* @__PURE__ */(0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d3)(async (holder, amount) => {
      return this.erc20.burnFrom.prepare(holder, amount);
    }));
    this.abi = _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e.parse(abi || []);
    this.metadata = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ag(this.contractWrapper, _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dA, this.storage);
    this.app = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a$(this.contractWrapper, this.metadata, this.storage);
    this.roles = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ah(this.contractWrapper, TokenDrop.contractRoles);
    this.encoder = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.af(this.contractWrapper);
    this.estimator = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aP(this.contractWrapper);
    this.events = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);
    this.sales = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aj(this.contractWrapper);
    this.platformFees = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aS(this.contractWrapper);
    this.interceptor = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aR(this.contractWrapper);
    this.claimConditions = new _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.al(this.contractWrapper, this.metadata, this.storage);
  }

  /** ******************************
   * READ FUNCTIONS
   *******************************/

  /**
   * Get your wallet voting power for the current checkpoints
   *
   * @returns the amount of voting power in tokens
   */
  async getVoteBalance() {
    return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress());
  }
  async getVoteBalanceOf(account) {
    return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(await (0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cp)(account)));
  }

  /**
   * Get your voting delegatee address
   *
   * @returns the address of your vote delegatee
   */
  async getDelegation() {
    return await this.getDelegationOf(await this.contractWrapper.getSignerAddress());
  }

  /**
   * Get a specific address voting delegatee address
   *
   * @returns the address of your vote delegatee
   */
  async getDelegationOf(account) {
    return await this.contractWrapper.readContract.delegates(await (0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cp)(account));
  }

  /**
   * Get whether users can transfer tokens from this contract
   */
  async isTransferRestricted() {
    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bG)("transfer"), ethers__WEBPACK_IMPORTED_MODULE_10__.AddressZero);
    return !anyoneCanTransfer;
  }
  /**
   * @internal
   */
  async prepare(method, args, overrides) {
    return _contract_publisher_49845f13_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({
      contractWrapper: this.contractWrapper,
      method,
      args,
      overrides
    });
  }

  /**
   * @internal
   */
  async call(functionName, args, overrides) {
    return this.contractWrapper.call(functionName, args, overrides);
  }
}
(0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(TokenDrop, "contractRoles", ["admin", "transfer"]);




/***/ })

}]);