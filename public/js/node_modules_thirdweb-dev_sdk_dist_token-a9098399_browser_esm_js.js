"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_thirdweb-dev_sdk_dist_token-a9098399_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/token-a9098399.browser.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/token-a9098399.browser.esm.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Token: () => (/* binding */ Token)
/* harmony export */ });
/* harmony import */ var _QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryParams-ca1fafc2.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/QueryParams-ca1fafc2.browser.esm.js");
/* harmony import */ var _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-publisher-c57d81de.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-c57d81de.browser.esm.js");
/* harmony import */ var _erc_20_history_4a3a9317_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./erc-20-history-4a3a9317.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/erc-20-history-4a3a9317.browser.esm.js");
/* harmony import */ var _erc_20_standard_c5b1ff3e_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./erc-20-standard-c5b1ff3e.browser.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-c5b1ff3e.browser.esm.js");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/constants/lib.esm/addresses.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/esm/tiny-invariant.js");
/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ "./node_modules/merkletreejs/dist/index.js");
/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js");
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ "./node_modules/bs58/index.js");
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.mjs");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cross-fetch */ "./node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_6__);











































































/**
 * Create a standard crypto token or cryptocurrency.
 *
 * @example
 *
 * ```javascript
 * import { ThirdwebSDK } from "@thirdweb-dev/sdk";
 *
 * const sdk = new ThirdwebSDK("{{chainName}}");
 * const contract = await sdk.getContract("{{contract_address}}", "token");
 * ```
 *
 * @public
 */
class Token extends _erc_20_standard_c5b1ff3e_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.S {
  /**
   * Signature Minting
   * @remarks Generate tokens that can be minted only with your own signature, attaching your own set of mint conditions.
   * @example
   * ```javascript
   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation
   * const signedPayload = contract.signature.generate(payload);
   *
   * // now anyone can mint the tokens
   * const tx = contract.signature.mint(signedPayload);
   * const receipt = tx.receipt; // the mint transaction receipt
   * ```
   */

  /**
   * @internal
   */

  constructor(network, address, storage) {
    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    let abi = arguments.length > 4 ? arguments[4] : undefined;
    let chainId = arguments.length > 5 ? arguments[5] : undefined;
    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd(network, address, abi, options);
    super(contractWrapper, storage, chainId);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "abi", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "metadata", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "app", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "roles", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "encoder", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "estimator", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "history", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "events", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "platformFees", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "sales", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "signature", void 0);
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "interceptor", void 0);
    /** ******************************
     * WRITE FUNCTIONS
     *******************************/
    /**
     * Mint Tokens for the connected wallet
     *
     * @remarks See {@link Token.mintTo}
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "mint", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async amount => {
      return this.erc20.mint.prepare(amount);
    }));
    /**
     * Mint Tokens
     *
     * @remarks Mint tokens to a specified address.
     *
     * @example
     * ```javascript
     * const toAddress = "{{wallet_address}}"; // Address of the wallet you want to mint the tokens to
     * const amount = "1.5"; // The amount of this token you want to mint
     *
     * await contract.mintTo(toAddress, amount);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "mintTo", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async (to, amount) => {
      return this.erc20.mintTo.prepare(to, amount);
    }));
    /**
     * Mint Tokens To Many Wallets
     *
     * @remarks Mint tokens to many wallets in one transaction.
     *
     * @example
     * ```javascript
     * // Data of the tokens you want to mint
     * const data = [
     *   {
     *     toAddress: "{{wallet_address}}", // Address to mint tokens to
     *     amount: 0.2, // How many tokens to mint to specified address
     *   },
     *  {
     *    toAddress: "0x...",
     *    amount: 1.4,
     *  }
     * ]
     *
     * await contract.mintBatchTo(data);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "mintBatchTo", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async args => {
      return this.erc20.mintBatchTo.prepare(args);
    }));
    /**
     * Lets you delegate your voting power to the delegateeAddress
     *
     * @param delegateeAddress - delegatee wallet address
     * @alpha
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "delegateTo", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async delegateeAddress => {
      return _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({
        contractWrapper: this.contractWrapper,
        method: "delegate",
        args: [await (0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(delegateeAddress)]
      });
    }));
    /**
     * Burn Tokens
     *
     * @remarks Burn tokens held by the connected wallet
     *
     * @example
     * ```javascript
     * // The amount of this token you want to burn
     * const amount = 1.2;
     *
     * await contract.burnTokens(amount);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "burn", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(amount => {
      return this.erc20.burn.prepare(amount);
    }));
    /**
     * Burn Tokens
     *
     * @remarks Burn tokens held by the specified wallet
     *
     * @example
     * ```javascript
     * // Address of the wallet sending the tokens
     * const holderAddress = "{{wallet_address}}";
     *
     * // The amount of this token you want to burn
     * const amount = 1.2;
     *
     * await contract.burnFrom(holderAddress, amount);
     * ```
     */
    (0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, "burnFrom", /* @__PURE__ */(0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async (holder, amount) => {
      return this.erc20.burnFrom.prepare(holder, amount);
    }));
    this.abi = _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e.parse(abi || []);
    this.metadata = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ag(this.contractWrapper, _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dK, this.storage);
    this.app = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a$(this.contractWrapper, this.metadata, this.storage);
    this.roles = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ah(this.contractWrapper, Token.contractRoles);
    this.sales = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aj(this.contractWrapper);
    this.events = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);
    this.history = new _erc_20_history_4a3a9317_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.T(this.contractWrapper, this.events);
    this.encoder = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.af(this.contractWrapper);
    this.estimator = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aP(this.contractWrapper);
    this.platformFees = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aS(this.contractWrapper);
    this.interceptor = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aR(this.contractWrapper);
    this.signature = new _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.as(this.contractWrapper, this.roles);
  }

  /** ******************************
   * READ FUNCTIONS
   *******************************/

  /**
   * Get your wallet voting power for the current checkpoints
   *
   * @returns the amount of voting power in tokens
   */
  async getVoteBalance() {
    return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress());
  }
  async getVoteBalanceOf(account) {
    return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(account));
  }

  /**
   * Get your voting delegatee address
   *
   * @returns the address of your vote delegatee
   */
  async getDelegation() {
    return await this.getDelegationOf(await this.contractWrapper.getSignerAddress());
  }

  /**
   * Get a specific address voting delegatee address
   *
   * @returns the address of your vote delegatee
   */
  async getDelegationOf(account) {
    return await this.contractWrapper.readContract.delegates(await (0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(account));
  }

  /**
   * Get whether users can transfer tokens from this contract
   */
  async isTransferRestricted() {
    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bJ)("transfer"), ethers__WEBPACK_IMPORTED_MODULE_11__.AddressZero);
    return !anyoneCanTransfer;
  }
  /**
   * Construct a mint transaction without executing it.
   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.
   * @param receiver - Address you want to send the token to
   * @param amount - The amount of tokens you want to mint
   *
   * @deprecated Use `contract.mint.prepare(...args)` instead
   */
  async getMintTransaction(to, amount) {
    return this.erc20.getMintTransaction(to, amount);
  }
  /**
   * @internal
   */
  async prepare(method, args, overrides) {
    return _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({
      contractWrapper: this.contractWrapper,
      method,
      args,
      overrides
    });
  }

  /**
   * @internal
   */
  async call(functionName, args, overrides) {
    return this.contractWrapper.call(functionName, args, overrides);
  }
}
(0,_QueryParams_ca1fafc2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(Token, "contractRoles", _contract_publisher_c57d81de_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dq);




/***/ })

}]);